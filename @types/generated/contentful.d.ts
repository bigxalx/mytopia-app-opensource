// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from "contentful";
import { Document } from "@contentful/rich-text-types";

export interface IAntwortFields {
  /** Antwort Text */
  antwortText?: string | undefined;

  /** Score  */
  score?: IScore[] | undefined;
}

export interface IAntwort extends Entry<IAntwortFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "antwort";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IAufgabeFields {
  /** Fraktion */
  fraktion: "mytopia" | "hyaenen" | "zirkel" | "vertraute";

  /** Title */
  title: string;

  /** Content */
  content: Document;

  /** empfaenger */
  empfaenger: ("mytopia" | "hyaenen" | "vertraute" | "zirkel")[];

  /** Release Date */
  releaseDate?: string | undefined;

  /** Ablaufdatum */
  ablaufdatum?: string | undefined;

  /** Punkte */
  punkte?: number | undefined;

  /** Task */
  task: IGpsTask | IQuizTask | IStepcounterTask;

  /** Thumbnail */
  thumbnail: Asset;
}

export interface IAufgabe extends Entry<IAufgabeFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "aufgabe";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IEinbuergerungstestFields {
  /** Title */
  title: string;

  /** Hero Image */
  heroImage?: Asset | undefined;

  /** Fragen */
  fragen: IQuestion[];

  /** Text */
  text: string;

  /** ErgebnisText */
  ergebnisText: Document;
}

export interface IEinbuergerungstest extends Entry<IEinbuergerungstestFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "einbuergerungstest";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IEinbuergerungstestKriteriumFields {
  /** Kriterium */
  kriterium?: string | undefined;

  /** Werte */
  werte: IEinbuergerungstestWerte[];
}

export interface IEinbuergerungstestKriterium
  extends Entry<IEinbuergerungstestKriteriumFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "einbuergerungstestKriterium";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IEinbuergerungstestWerteFields {
  /** Wert */
  wert: string;

  /** Beschreibung */
  beschreibung: string;

  /** Bild */
  bild?: Asset | undefined;
}

export interface IEinbuergerungstestWerte
  extends Entry<IEinbuergerungstestWerteFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "einbuergerungstestWerte";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IGlobalFields {
  /** Mytopia Logo */
  mytopiaLogo: Asset;

  /** Hyänen Logo */
  hyaenenLogo: Asset;

  /** Zirkel Logo */
  zirkelLogo: Asset;

  /** Vertraute Logo */
  vertrauteLogo: Asset;

  /** Hyaenen Schwelle */
  hyaenenSchwelle: number;

  /** Vertraute Schwelle */
  vertrauteSchwelle: number;

  /** Zirkel Schwelle */
  zirkelSchwelle: number;

  /** Einbürgerung Mytopia Text */
  einbuergerungMytopiaText: string;

  /** Einbürgerung Mytopia Image */
  einbuergerungMytopiaImage: Asset;

  /** Wechsel zu Hyaenen Text */
  wechselZuHyaenenText: string;

  /** Wechsel zu Hyaenen Image */
  wechselZuHyaenenImage: Asset;

  /** Wechsel Zu Zirkel Text */
  wechselZuZirkelText: string;

  /** Wechsel zu Zirkel Image */
  wechselZuZirkelImage: Asset;

  /** Wechsel zu Vertraute Text */
  wechselZuVertrauteText: string;

  /** Wechsel zu Vertraute Image */
  wechselZuVertrauteImage: Asset;

  /** Mytopia Infos */
  mytopiaInfos?: IInfo[] | undefined;

  /** Hyänen Infos */
  hyaenenInfos?: IInfo[] | undefined;

  /** Zirkel Infos */
  zirkelInfos?: IInfo[] | undefined;

  /** Vertraute Infos */
  vertrauteInfos?: IInfo[] | undefined;
}

export interface IGlobal extends Entry<IGlobalFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "global";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IGpsTaskFields {
  /** Ortsbezeichnung */
  ortsbezeichnung: string;

  /** Location */
  location: { lat: number; lon: number };

  /** Ersatz Aufgabe */
  ersatzAufgabe: IAufgabe;
}

export interface IGpsTask extends Entry<IGpsTaskFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "gpsTask";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IInfoFields {
  /** Title */
  title: string;

  /** Content */
  content?: Document | undefined;
}

export interface IInfo extends Entry<IInfoFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "info";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface INewsFields {
  /** Title */
  title: string;

  /** Thumbnail */
  thumbnail: Asset;

  /** Release Date */
  releaseDate?: string | undefined;

  /** Content */
  content: Document;

  /** Location */
  location?: { lat: number; lon: number } | undefined;

  /** Empfängerkreis */
  recipient: ("mytopia" | "hyaenen" | "vertraute" | "zirkel")[];
}

export interface INews extends Entry<INewsFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "news";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IQuestionFields {
  /** Frage Titel */
  frageTitel?: string | undefined;

  /** Frage Text */
  frageText?: string | undefined;

  /** Antworten */
  antworten: IAntwort[];
}

export interface IQuestion extends Entry<IQuestionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "question";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IQuizTaskFields {
  /** Fragen */
  fragen: ITaskFrage[];
}

export interface IQuizTask extends Entry<IQuizTaskFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "quizTask";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IScoreFields {
  /** Kriterium */
  kriterium: IEinbuergerungstestWerte;

  /** Wertung */
  wertung: number;
}

export interface IScore extends Entry<IScoreFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "score";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IStepcounterTaskFields {
  /** Schritte */
  schritte: number;

  /** Ersatz Aufgabe */
  ersatzAufgabe: IAufgabe;
}

export interface IStepcounterTask extends Entry<IStepcounterTaskFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "stepcounterTask";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITaskAntwortFields {
  /** Title */
  title: string;

  /** Richtige Antwort */
  richtigeAntwort: boolean;
}

export interface ITaskAntwort extends Entry<ITaskAntwortFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "taskAntwort";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITaskFrageFields {
  /** Frage Title */
  frageTitle: string;

  /** Frage Text */
  frageText: string;

  /** Antworten */
  antworten: ITaskAntwort[];
}

export interface ITaskFrage extends Entry<ITaskFrageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "taskFrage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IVideoEmbedFields {
  /** Title */
  title?: string | undefined;

  /** Video URL */
  videoUrl: string;

  /** Thumbnail */
  thumbnail: Asset;
}

export interface IVideoEmbed extends Entry<IVideoEmbedFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "videoEmbed";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export type CONTENT_TYPE =
  | "antwort"
  | "aufgabe"
  | "einbuergerungstest"
  | "einbuergerungstestKriterium"
  | "einbuergerungstestWerte"
  | "global"
  | "gpsTask"
  | "info"
  | "news"
  | "question"
  | "quizTask"
  | "score"
  | "stepcounterTask"
  | "taskAntwort"
  | "taskFrage"
  | "videoEmbed";

export type IEntry =
  | IAntwort
  | IAufgabe
  | IEinbuergerungstest
  | IEinbuergerungstestKriterium
  | IEinbuergerungstestWerte
  | IGlobal
  | IGpsTask
  | IInfo
  | INews
  | IQuestion
  | IQuizTask
  | IScore
  | IStepcounterTask
  | ITaskAntwort
  | ITaskFrage
  | IVideoEmbed;

export type LOCALE_CODE = "en-US";

export type CONTENTFUL_DEFAULT_LOCALE_CODE = "en-US";
